#!/bin/bash

set -eux

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CI_DIR="$( cd "${MY_DIR}/../../" && pwd )"
WORKSPACE_DIR="$( cd "${MY_DIR}/../../../" && pwd )"

SKIP_IF_NO_DEPLOYMENT="${SKIP_IF_NO_DEPLOYMENT:-false}"
DEPLOYMENT_NAME="${DEPLOYMENT_NAME:?}"
ERRAND="${ERRAND:?}"

DIRECTOR_IP_FILE="${DIRECTOR_IP_FILE:?}"
BOSH_PASSWORD_FILE="${BOSH_PASSWORD_FILE:?}"
export BOSH_USER=${BOSH_USER:?}

source ${CI_DIR}/scripts/common/check_if_deployment_exists

pushd ${WORKSPACE_DIR}
  DIRECTOR_IP=$(cat ${DIRECTOR_IP_FILE})
  export BOSH_PASSWORD=$(cat ${BOSH_PASSWORD_FILE} | jq -r '.director_password')
popd

bosh -n target "${DIRECTOR_IP}"

set +e
check_if_deployment_exists ${DEPLOYMENT_NAME}
DEPLOYMENT_GREP_RESULT=$?
set -e

# A value of 0 indicates deployment exists
if [ ${DEPLOYMENT_GREP_RESULT} -ne 0 ]; then
  if [ "${SKIP_IF_NO_DEPLOYMENT}" = "true" ]; then
    echo "deployment ${DEPLOYMENT_NAME} does not exist, skipping errand"
    exit 0
  else
    echo "deployment ${DEPLOYMENT_NAME} does not exist"
    exit 1
  fi
fi

MANIFEST_FILE=/tmp/errand-manifest.yml
bosh download manifest ${DEPLOYMENT_NAME} ${MANIFEST_FILE}
bosh deployment ${MANIFEST_FILE}
bosh run errand ${ERRAND}
