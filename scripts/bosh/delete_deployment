#!/bin/bash

set -eux -o pipefail

MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CI_DIR="$( cd ${MY_DIR}/../../ && pwd )"
WORKSPACE_DIR="$( cd ${CI_DIR}/../ && pwd )"

source ${CI_DIR}/scripts/utils.sh

: "${ENV_TARGET_FILE:?}"
: "${ENV_METADATA:?}"

BOSH_TARGET="$(cat "${ENV_TARGET_FILE}")"
ENV="$(jq_val "env" "${ENV_METADATA}")"
DEPLOYMENT_NAME="$(jq_val "deployment_name" "${ENV_METADATA}")"
BOSH_USER="$(jq_val "bosh_user" "${ENV_METADATA}")"
BOSH_PASSWORD="$(jq_val "bosh_password" "${ENV_METADATA}")"

bosh -n target "${BOSH_TARGET}"
bosh -n login "${BOSH_USER}" "${BOSH_PASSWORD}"

set +e
check_if_deployment_exists ${DEPLOYMENT_NAME}
DEPLOYMENT_GREP_RESULT=$?
set -e

# A value of 0 indicates grep matched successfully,
# and hence the deployment exists
if [ ${DEPLOYMENT_GREP_RESULT} -eq 0 ]; then
  bosh -n delete deployment ${DEPLOYMENT_NAME} --force
else
  echo "deployment ${DEPLOYMENT_NAME} not found - nothing to delete"
fi
