---
### RESOURCES
resources:
- name: cf-riak-cs-ci-image
  type: docker-image
  source:
    username: {{cf-docker-username}}
    email: {{cf-docker-email}}
    password: {{cf-docker-password}}
    repository: cloudfoundry/cf-riak-cs-ci

- name: cf-riak-cs-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-riak-cs-ci.git
    paths:
    - scripts/Dockerfile

- name: initial-env-bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: integration-env-bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: bosh-lite-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: deployments-configuration
  type: git
  source:
    uri: git@github.com:pivotal-cf/deployments-core-services
    private_key: {{git-private-key}}

- name: cf-riak-cs-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-riak-cs-ci.git

- name: cf-riak-cs-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-riak-cs-release.git
    branch: develop

- name: cf-riak-cs-release-master
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-riak-cs-release.git
    branch: master

- name: cf-riak-cs-release-rc
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-riak-cs-release
    branch: release-candidate
    private_key: {{git-writer-private-key}}

- name: initial-deployment
  type: bosh-deployment
  source:  
    target: https://bosh.dijon.cf-app.com:25555
    username: {{aws_bosh_username}}
    password: {{aws_bosh_password}}
    deployment: cf-riak-cs
    ignore_ssl: true

- name: integration-deployment
  type: bosh-deployment
  source:
    target: https://bosh.a1.cf-app.com:25555
    username: {{integration_env_bosh_username}}
    password: {{integration_env_bosh_password}}
    deployment: cf-a1-riak-cs
    ignore_ssl: true

- name: initial-environment
  type: pool
  source:
    uri: &pool-uri git@github.com:pivotal-cf-experimental/core-services-oss-env-resource-pool
    branch: master
    pool: aws
    private_key: {{git-writer-private-key}}

- name: integration-environment
  type: pool
  source:
    uri: *pool-uri
    branch: master
    pool: aws-integration
    private_key: {{git-writer-private-key}}

- name: bosh-lite-environment
  type: pool
  source:
    uri: *pool-uri
    branch: master
    pool: bosh-lites-working
    private_key: {{git-writer-private-key}}

- name: bosh-lite-deployment
  type: bosh-deployment
  source:
    username: {{bosh-lite-username}}
    password: {{bosh-lite-password}}
    deployment: cf-warden-riak-cs
    ignore_ssl: true

- name: cf-riak-cs-final-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-riak-cs-release

- name: cf-riak-cs-rc-artifacts
  type: s3
  source:
    bucket: cf-riak-cs-releases
    regexp: release-candidate\/cf-riak-cs-.*\.tgz
    access_key_id: {{cf-riak-cs-ci-aws-access-key-id}}
    secret_access_key: {{cf-riak-cs-ci-aws-secret-access-key}}

### JOBS
jobs:
- name: push-docker-image
  plan:
  - get: cf-riak-cs-dockerfile
    trigger: true
  - put: cf-riak-cs-ci-image
    params:
      build: cf-riak-cs-dockerfile/scripts/
      cache: true

- name: test-unit
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      trigger: true
  - task: test-unit
    config:
      platform: &platform linux
      image: &image docker:///cloudfoundry/cf-riak-cs-ci
      inputs:
      - name: cf-riak-cs-release
      run:
        path: cf-riak-cs-release/scripts/test-unit

- name: test-sample-stubs
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      trigger: true
  - task: test-sample-stubs
    config:
      platform: *platform
      image: *image
      inputs:
      - name: cf-riak-cs-release
      run:
        path: cf-riak-cs-release/scripts/test_sample_stubs

- name: claim-initial-environment
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [test-sample-stubs, test-unit]
      trigger: true
    - put: initial-environment
      params:
        acquire: true

- name: release-initial-environment-manual
  plan:
  - aggregate:
    - get: initial-environment
      passed: [claim-initial-environment]
  - put: initial-environment
    params:
      release: initial-environment

- name: delete-initial-deployment
  plan:
  - aggregate:
    - get: initial-environment
      passed: [claim-initial-environment]
    - get: cf-riak-cs-release
      passed: [claim-initial-environment]
      trigger: true
    - get: cf-riak-cs-ci
  - try: 
      task: run-broker-deregistrar
      config:
        platform: *platform
        image: *image
        inputs:
        - name: cf-riak-cs-ci
        - name: initial-environment
        params:
          ENV_TARGET_FILE: initial-environment/name
          ENV_METADATA: initial-environment/metadata
          DEPLOYMENT_NAME: cf-riak-cs
          ERRAND: broker-deregistrar
          SKIP_IF_NO_DEPLOYMENT: true
        run:
          path: cf-riak-cs-ci/scripts/bosh/run_errand
  - task: delete-initial-deployment
    config:
      platform: *platform
      image: *image
      inputs:
      - name: cf-riak-cs-ci
      - name: initial-environment
      params:
          ENV_TARGET_FILE: initial-environment/name
          ENV_METADATA: initial-environment/metadata
          DEPLOYMENT_NAME: cf-riak-cs
      run:
        path: cf-riak-cs-ci/scripts/bosh/delete_deployment

- name: deploy-to-initial
  plan:
  - aggregate:
    - get: deployments-configuration
    - get: cf-riak-cs-ci
    - get: cf-riak-cs-release
      passed: [delete-initial-deployment]
      trigger: true
    - get: initial-env-bosh-stemcell
    - get: initial-environment
      passed: [delete-initial-deployment]
  - aggregate:
    - &create-release
      task: create-release
      config:
        platform: *platform
        image: *image
        inputs:
        - name: cf-riak-cs-ci
        - name: cf-riak-cs-release
        params:
          OUTPUT_DIR: release-tarball
          RELEASE_RELATIVE_DIR: cf-riak-cs-release/
        outputs:
        - name: release-tarball
        run:
          path: cf-riak-cs-ci/scripts/create_release
    - task: make-manifest
      config:
        platform: *platform
        image: *image
        inputs:
        - name: deployments-configuration
        - name: cf-riak-cs-ci
        - name: cf-riak-cs-release
        - name: initial-environment
        params:
          DEPLOYMENTS_DIR: deployments-configuration
          ENV_TARGET_FILE: initial-environment/name
          ENV_METADATA: initial-environment/metadata
          OUTPUT_DIR: deployment-manifest
        run:
          path: cf-riak-cs-ci/scripts/bosh/make_manifest
        outputs:
        - name: deployment-manifest
  - put: initial-deployment
    params:
      manifest: deployment-manifest/deployment.yml
      releases: [release-tarball/*.tgz]
      stemcells: [initial-env-bosh-stemcell/*.tgz]

- name: run-smoke-tests-initial
  plan:
  - aggregate:
    - get: initial-environment
      passed: [deploy-to-initial]
    - get: cf-riak-cs-release
      passed: [deploy-to-initial]
      trigger: true
    - get: cf-riak-cs-ci
  - task: run-broker-registrar
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: initial-environment
      params:
        ENV_TARGET_FILE: initial-environment/name
        ENV_METADATA: initial-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
        ERRAND: broker-registrar
      run:
        path: cf-riak-cs-ci/scripts/bosh/run_errand
  - task: run-smoke-tests
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: initial-environment
      params:
        ENV_TARGET_FILE: initial-environment/name
        ENV_METADATA: initial-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
        ERRAND: acceptance-tests
      run:
        path: cf-riak-cs-ci/scripts/bosh/run_errand

- name: release-aws-environmment
  plan:
  - get: cf-riak-cs-release
    passed: [run-smoke-tests-initial]
    trigger: true
  - get: initial-environment
    passed: [run-smoke-tests-initial]
    trigger: true
  - put: initial-environment
    params:
      release: initial-environment

### UPGRADE
- name: claim-bosh-lite-upgrade
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [run-smoke-tests-initial]
      trigger: true
    - put: bosh-lite-environment
      params:
        acquire: true

- name: release-upgrade-environment-manual
  plan:
  - aggregate:
    - get: bosh-lite-environment
      passed: [claim-bosh-lite-upgrade]
  - put: bosh-lite-environment
    params:
      release: bosh-lite-environment

- name: delete-upgrade-deployment
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [claim-bosh-lite-upgrade]
      trigger: true
    - get: bosh-lite-environment
      passed: [claim-bosh-lite-upgrade]
      trigger: true
    - get: cf-riak-cs-ci
  - &broker-deregistrar-bosh-lite
    task: run-broker-deregistrar
    config:
      platform: *platform
      image: *image
      inputs:
        - name: bosh-lite-environment
        - name: cf-riak-cs-ci
      params:
        ENV_TARGET_FILE: bosh-lite-environment/name
        ENV_METADATA: bosh-lite-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
        ERRAND: broker-deregistrar
        SKIP_IF_NO_DEPLOYMENT: true
      run:
        path: cf-riak-cs-ci/scripts/bosh/run_errand
  - &delete-deployment-bosh-lite
    task: delete-deployment
    config:
      platform: *platform
      image: *image
      inputs:
        - name: bosh-lite-environment
        - name: cf-riak-cs-ci
      params:
        ENV_TARGET_FILE: bosh-lite-environment/name
        ENV_METADATA: bosh-lite-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
      run:
        path: cf-riak-cs-ci/scripts/bosh/delete_deployment

- name: deploy-previous-to-upgrade
  plan:
  - aggregate:
    - get: cf-riak-cs-ci
    - get: cf-riak-cs-release
      resource: cf-riak-cs-release-master
      params:
        submodules: none
    - get: bosh-lite-stemcell
    - get: bosh-lite-environment
      passed: [delete-upgrade-deployment]
      trigger: true
    - get: cf-riak-cs-final-release
  - task: make-manifest-previous
    config:
      platform: *platform
      image: *image
      inputs:
      - name: cf-riak-cs-ci
      - name: cf-riak-cs-release
      - name: bosh-lite-environment
      params:
        OUTPUT_FILE: deployment.yml
        ENV_METADATA: bosh-lite-environment/metadata
        USE_PREVIOUS_RELEASE: true
      run:
        path: cf-riak-cs-ci/scripts/bosh-lite/make_manifest
      outputs:
      - name: deployment-manifest
  - put: bosh-lite-deployment
    params:
      target_file: bosh-lite-environment/name
      manifest: deployment-manifest/deployment.yml
      releases: [cf-riak-cs-final-release/release.tgz]
      stemcells: [bosh-lite-stemcell/*.tgz]

- name: broker-registrar-previous-on-upgrade
  plan:
  - aggregate:
    - get: cf-riak-cs-ci
    - get: cf-riak-cs-release
      # we don't use current cf-riak-cs in deploy stage
      passed: [delete-upgrade-deployment]
    - get: bosh-lite-environment
      passed: [deploy-previous-to-upgrade]
      trigger: true
  - &broker-registrar-bosh-lite
    task: run-broker-registrar
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: bosh-lite-environment
      params:
        ENV_TARGET_FILE: bosh-lite-environment/name
        ENV_METADATA: bosh-lite-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
        ERRAND: broker-registrar
      run:
        path: cf-riak-cs-ci/scripts/bosh/run_errand

- name: smoke-tests-previous-on-upgrade
  plan:
  - aggregate:
    - get: cf-riak-cs-ci
    - get: cf-riak-cs-release
      passed: [broker-registrar-previous-on-upgrade]
      trigger: true
    - get: bosh-lite-environment
      passed: [broker-registrar-previous-on-upgrade]
      trigger: true
  - &smoke-tests-bosh-lite
    task: run-smoke-tests
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: bosh-lite-environment
      params:
        ENV_TARGET_FILE: bosh-lite-environment/name
        ENV_METADATA: bosh-lite-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
        ERRAND: acceptance-tests
      run:
        path: cf-riak-cs-ci/scripts/bosh/run_errand

- name: deploy-current-to-upgrade
  plan:
  - aggregate:
    - get: cf-riak-cs-ci
    - get: cf-riak-cs-release
      passed: [smoke-tests-previous-on-upgrade]
      trigger: true
    - get: bosh-lite-stemcell
    - get: bosh-lite-environment
      passed: [smoke-tests-previous-on-upgrade]
      trigger: true
  - aggregate:
    - *create-release
    - task: make-manifest
      config:
        platform: *platform
        image: *image
        inputs:
        - name: cf-riak-cs-ci
        - name: cf-riak-cs-release
        - name: bosh-lite-environment
        params:
          OUTPUT_FILE: deployment.yml
          ENV_METADATA: bosh-lite-environment/metadata
          OUTPUT_DIR: deployment-manifest
        run:
          path: cf-riak-cs-ci/scripts/bosh-lite/make_manifest
        outputs:
        - name: deployment-manifest
  - put: bosh-lite-deployment
    params:
      target_file: bosh-lite-environment/name
      manifest: deployment-manifest/deployment.yml
      releases: [release-tarball/*.tgz]
      stemcells: [bosh-lite-stemcell/*.tgz]

- name: smoke-tests-current-on-upgrade
  plan:
  - aggregate:
    - get: cf-riak-cs-ci
    - get: cf-riak-cs-release
      passed: [deploy-current-to-upgrade]
      trigger: true
    - get: bosh-lite-environment
      passed: [deploy-current-to-upgrade]
      trigger: true
  - *smoke-tests-bosh-lite

- name: release-upgrade-environment
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [smoke-tests-current-on-upgrade]
      trigger: true
    - get: bosh-lite-environment
      passed: [smoke-tests-current-on-upgrade]
      trigger: true
  - put: bosh-lite-environment
    params:
      release: bosh-lite-environment

### INTEGRATION DEPLOY
- name: claim-integration-environment
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [release-upgrade-environment]
      trigger: true
  - put: integration-environment
    params:
      acquire: true

- name: deploy-to-integration
  serial: true
  plan:
  - aggregate:
    - get: deployments-configuration
    - get: cf-riak-cs-ci
    - get: cf-riak-cs-release
      passed: [claim-integration-environment]
      trigger: true
    - get: integration-env-bosh-stemcell
    - get: integration-environment
      passed: [claim-integration-environment]
      trigger: true
  - aggregate:
    - *create-release
    - task: make-manifest
      config:
        platform: *platform
        image: *image
        inputs:
        - name: deployments-configuration
        - name: cf-riak-cs-ci
        - name: cf-riak-cs-release
        - name: integration-environment
        params:
          ENV_TARGET_FILE: integration-environment/name
          ENV_METADATA: integration-environment/metadata
          OUTPUT_DIR: deployment-manifest
        run:
          path: cf-riak-cs-ci/scripts/bosh/make_manifest
        outputs:
        - name: deployment-manifest
  - put: integration-deployment
    params:
      manifest: deployment-manifest/deployment.yml
      releases: [release-tarball/*.tgz]
      stemcells: [integration-env-bosh-stemcell/*.tgz]

- name: run-smoke-tests-integration
  plan:
  - aggregate:
    - get: integration-environment
      passed: [deploy-to-integration]
    - get: cf-riak-cs-release
      passed: [deploy-to-integration]
      trigger: true
    - get: cf-riak-cs-ci
  - task: run-broker-registrar
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: integration-environment
      params:
        ENV_TARGET_FILE: integration-environment/name
        ENV_METADATA: integration-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
        ERRAND: broker-registrar
      run:
        path: cf-riak-cs-ci/scripts/bosh/run_errand
  - task: run-smoke-tests
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: integration-environment
      params:
        ENV_TARGET_FILE: integration-environment/name
        ENV_METADATA: integration-environment/metadata
        DEPLOYMENT_NAME: cf-riak-cs
        ERRAND: acceptance-tests
      run:
        path: cf-riak-cs-ci/scripts/bosh/run_errand

- name: release-integration-environment
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [run-smoke-tests-integration]
      trigger: true
    - get: integration-environment
      passed: [run-smoke-tests-integration]
      trigger: true
  - put: integration-environment
    params:
      release: integration-environment

- name: upload-rc-artifacts
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [run-smoke-tests-integration]
      trigger: true
    - get: cf-riak-cs-ci
  - task: create-rc-release-artifacts
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: cf-riak-cs-release
      params:
        RELEASE_RELATIVE_DIR: cf-riak-cs-release
        OUTPUT_DIR: release-tarball
      run:
        path: cf-riak-cs-ci/scripts/create_release
      outputs:
      - name: release-tarball
  - put: cf-riak-cs-rc-artifacts
    params:
      from: release-tarball/*.tgz
      to: release-candidate/

- name: promote-to-rc
  plan:
  - aggregate:
    - get: cf-riak-cs-release
      passed: [run-smoke-tests-integration]
      trigger: true
      params:
        fetch: [release-candidate]
    - get: cf-riak-cs-ci
  - task: merge-to-release-candidate
    config:
      platform: *platform
      image: *image
      inputs:
        - name: cf-riak-cs-ci
        - name: cf-riak-cs-release
      params:
        OUTPUT_DIR: rc-repo
      run:
        path: cf-riak-cs-ci/scripts/publish/merge-to-release-candidate
      outputs:
      - name: rc-repo
  - put: cf-riak-cs-release-rc
    params:
      repository: rc-repo/cf-riak-cs-release

groups: [{name: cf-riak-cs, jobs: [push-docker-image,test-unit,test-sample-stubs,claim-initial-environment,release-initial-environment-manual,delete-initial-deployment,deploy-to-initial,run-smoke-tests-initial,release-aws-environmment,claim-bosh-lite-upgrade,release-upgrade-environment-manual,delete-upgrade-deployment,deploy-previous-to-upgrade,broker-registrar-previous-on-upgrade,smoke-tests-previous-on-upgrade,deploy-current-to-upgrade,smoke-tests-current-on-upgrade,release-upgrade-environment,claim-integration-environment,deploy-to-integration,run-smoke-tests-integration,release-integration-environment,upload-rc-artifacts,promote-to-rc]}]
